pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--LICHBANE
--by justin

-- CONFIG
-- flags
wall_flag = 0
anim1_flag = 1
anim2_flag = 2

-- setup
SCREEN_SIZE = 128
HAZARD_DAMAGE_DELAY = 15

-- game states
game_states = {
    splash = 0,
    game = 1,
    dialogue = 2,
    gameover = 3
}

-- splash settings
splash_config = {
    title = "lichbane",
    subtitle = "press üÖæÔ∏è to start",
    bg_color = 1,
    title_color = 7,
    subtitle_color = 6
}
-->8
-- UTILS
function text_x_pos(text)
    local letter_width = 4
    local width = #text * letter_width
    if width > SCREEN_SIZE then return 0 end
    return SCREEN_SIZE/2 - flr(width/2)
end

function write(text,x,y,color)
    for i=0,2 do
        for j=0,2 do
            print(text,x+i,y+j,0)
        end
    end
    print(text,x+1,y+1,color)
end

function play_sound(id)
    sfx(id)
end

function mod_zero(a,b)
    return a - flr(a/b)*b == 0
end
-->8
-- CORE
state = game_states.splash
win_flag = false

function change_state(new_state)
    if not states[new_state] then
        printh("invalid state change: "..new_state)
        return
    end
    state = new_state
end

function _init()
    cls()
    map_setup()
    setup_tile_handlers() -- <--- this must happen after map_setup
    player = Player.create(5,6)
    make_npc(10,10)
    make_npc(15,12)
    dtb_init()

    states = {
        [game_states.splash] = {update=update_splash, draw=draw_splash},
        [game_states.game] = {update=update_game, draw=draw_game},
        [game_states.dialogue] = {update=update_dialogue, draw=draw_game},
        [game_states.gameover] = {update=update_gameover, draw=draw_gameover}
    }
end


function _update()
    dtb_update()
    if states[state] then states[state].update() end
end

function _draw()
    cls()
    if states[state] then states[state].draw() end
    dtb_draw()
end
-->8
-- ENTITY
Entity = {}
Entity.__index = Entity

function Entity.create(x,y,w,h)
    local e = {x=x,y=y,w=w,h=h}
    setmetatable(e, Entity)
    return e
end

function Entity:collide(other)
    return other.x < self.x + self.w and self.x < other.x + other.w
       and other.y < self.y + self.h and self.y < other.y + other.h
end
-->8
-- PLAYER
Player = {}
Player.__index = Player
setmetatable(Player, {__index=Entity})

function Player.create(x,y)
    local p = Entity.create(x,y,1,1)
    setmetatable(p, Player)
    p.sprite = 1
    p.keys = 0
    p.gold = 0
    p.hp = 5
    p.hazard_timer = 0
    return p
end

function Player:update()
    self:handle_input()
    self:check_hazard_damage()
end

function Player:draw()
    spr(self.sprite, self.x*8, self.y*8)
end

function Player:handle_input()
    local newx, newy = self.x, self.y
    if btnp(0) then newx -= 1 end
    if btnp(1) then newx += 1 end
    if btnp(2) then newy -= 1 end
    if btnp(3) then newy += 1 end

    if can_move(newx, newy) then
        self.x = mid(0, newx, 127)
        self.y = mid(0, newy, 63)
    else
        play_sound(0)
    end

    if btnp(4) then
        self:try_interact()
    end
end

function Player:try_interact()
    local facing_x, facing_y = self.x, self.y

    if btn(0) then facing_x -= 1
    elseif btn(1) then facing_x += 1
    elseif btn(2) then facing_y -= 1
    elseif btn(3) then facing_y += 1
    end

    if not interact_with_tile(facing_x, facing_y) then
        interact_with_entity(facing_x, facing_y)
    end
end


function Player:check_hazard_damage()
    if tile_type_at(self.x, self.y) == "hazard" then
        if self.hazard_timer <= 0 then
            self.hp -= 1
            self.hazard_timer = HAZARD_DAMAGE_DELAY
            play_sound(0)
            if self.hp <= 0 then
                change_state(game_states.gameover)
                win_flag = false
            end
        end
    end

    if self.hazard_timer > 0 then
        self.hazard_timer -= 1
    end
end
-->8
-- NPC
npcs = {}

function make_npc(x, y)
    local npc = Entity.create(x, y, 1, 1)
    npc.sprite = flr(rnd(4)) + 17
    npc.move_timer = 0
    npc.move_cooldown = 30 + flr(rnd(60))
    add(npcs, npc)
end

function update_npcs()
    for npc in all(npcs) do
        npc.move_timer -= 1
        if npc.move_timer <= 0 then
            move_npc(npc)
            npc.move_timer = npc.move_cooldown
        end
    end
end

function move_npc(npc)
    local dir = rnd({"left", "right", "up", "down"})
    local newx, newy = npc.x, npc.y

    if dir == "left" then newx -= 1
    elseif dir == "right" then newx += 1
    elseif dir == "up" then newy -= 1
    elseif dir == "down" then newy += 1
    end

    if can_move(newx, newy) and not (newx == player.x and newy == player.y) then
        npc.x = mid(0, newx, 127)
        npc.y = mid(0, newy, 63)
    end
end

function draw_npcs()
    for npc in all(npcs) do
        spr(npc.sprite, npc.x*8, npc.y*8)
    end
end

function check_npc_interact(x, y)
    if state != game_states.game then return end

    for npc in all(npcs) do
        if npc.x == x and npc.y == y then
            change_state(game_states.dialogue)
            dtb_disp("hello, traveler! stay a while and listen.")
            break
        end
    end
end
-->8
-- MAP
tile_types = {}

function set_tile_type(tile_id, tile_type)
    tile_types[tile_id] = tile_type
end

function clear_tile_type(x, y)
    tile_types[tile_at(x, y)] = nil
end

function tile_at(x, y)
    return mget(x, y)
end

function tile_type_at(x, y)
    return tile_types[tile_at(x, y)]
end

function map_setup()
    timer = 0
    anim_time = 30

    tile_animations = {
        {frames={176,177}, speed=20}, -- grass
        {frames={187,188}, speed=20}, -- path grass
        {frames={183,184}, speed=10}, -- water
        {frames={78,79}, speed=15}, -- spikes type 1
        {frames={94,95}, speed=15} -- spikes type 2
    }

    local tile_type_map = {
        key = {92, 108},
        door_locked = {76},
        door_unlocked = {120},
        chest_locked = {124},
        chest_unlocked = {122},
        sign = {110},
        win = {127},
        hazard = {78, 94}
    }    

    for type, tiles in pairs(tile_type_map) do
        for tile in all(tiles) do
            set_tile_type(tile, type)
        end
    end
end


function update_map()
    if timer < 0 then
        toggle_tiles()
        timer = anim_time
    end
    timer -= 1
end

function draw_map()
    mapx = flr(player.x/16)*16
    mapy = flr(player.y/16)*16
    camera(mapx*8, mapy*8)
    map(0,0,0,0,128,64)
end

function can_move(x, y)
    local tile = tile_at(x, y)
    if fget(tile, wall_flag) then return false end
    for npc in all(npcs) do
        if npc.x == x and npc.y == y then return false end
    end
    return true
end

function swap_tile(x, y)
    mset(x, y, tile_at(x, y) + 1)
end

function unswap_tile(x, y)
    mset(x, y, tile_at(x, y) - 1)
end

-- animations
function get_next_frame(frames, current_tile)
    for i=1,#frames do
        if frames[i] == current_tile then
            return frames[(i % #frames) + 1] -- next frame, wrapping around
        end
    end
    return frames[1] -- fallback safety
end

function toggle_tiles()
    for x=mapx,mapx+15 do
        for y=mapy,mapy+15 do
            local tile = tile_at(x, y)
            for anim in all(tile_animations) do
                for frame in all(anim.frames) do
                    if tile == frame then
                        local next_frame = get_next_frame(anim.frames, tile)
                        mset(x, y, next_frame)
                        break
                    end
                end
            end
        end
    end
end


-->8
-- INTERACTION
tile_handlers = {}

function setup_tile_handlers()
    tile_handlers = {
        key = get_key,
        door_locked = open_locked_door,
        door_unlocked = open_unlocked_door,
        chest_locked = open_locked_chest,
        chest_unlocked = open_unlocked_chest,
        sign = read_sign,
        win = trigger_win
    }    
end

function interact_with_tile(x, y)
    local t = tile_type_at(x, y)
    local handler = tile_handlers[t]
    if handler then
        handler(x, y)
        return true
    end
    return false
end

function interact_with_entity(x, y)
    for npc in all(npcs) do
        if npc.x == x and npc.y == y then
            change_state(game_states.dialogue)
            dtb_disp("hello, traveler! stay a while and listen.")
            return true
        end
    end
    return false
end

function get_key(x, y)
    player.keys += 1
    swap_tile(x, y)
    clear_tile_type(x, y)
    play_sound(1)
end

function open_something(x, y, needs_key, reward)
    reward = reward or 0
    if needs_key and player.keys == 0 then
        play_sound(1)
        return
    end
    if needs_key then
        player.keys -= 1
    end
    player.gold += reward
    swap_tile(x, y)
    clear_tile_type(x, y)
    play_sound(2)
end

function open_locked_door(x, y)
    open_something(x, y, true)
end

function open_unlocked_door(x, y)
    open_something(x, y, false)
end

function open_locked_chest(x, y)
    open_something(x, y, true, 100)
end

function open_unlocked_chest(x, y)
    open_something(x, y, false, 100)
end

function read_sign(x, y)
    change_state(game_states.dialogue)
    dtb_disp("an old, weathered sign.\n(more signs coming soon!)")
end

function trigger_win(x, y)
    win_flag = (player.keys >= 1)
    change_state(game_states.gameover)
end
-->8
-- HUD
function show_hud()
    local hudx = mapx*8 + 2
    local hud_y = mapy*8 + 2
    rectfill(hudx, hud_y, hudx+60, hud_y+32, 0)
    rect(hudx, hud_y, hudx+60, hud_y+32, 7)
    print("hp: "..player.hp, hudx+6, hud_y+4, 8)
    print("keys: "..player.keys, hudx+6, hud_y+12, 9)
    print("gold: "..player.gold, hudx+6, hud_y+20, 9)
end
-->8
-- STATES
function update_splash()
    if btnp(üÖæÔ∏è) then change_state(game_states.game) end
end

function draw_splash()
    camera()
    rectfill(0, 0, SCREEN_SIZE, SCREEN_SIZE, splash_config.bg_color)
    print(splash_config.title, text_x_pos(splash_config.title), 52, splash_config.title_color)
    if splash_config.subtitle then
        print(splash_config.subtitle, text_x_pos(splash_config.subtitle), 64, splash_config.subtitle_color)
    end
end

function update_game()
    update_map()
    player:update()
    update_npcs()
    check_win_lose()
end

function draw_game()
    draw_map()
    draw_npcs()
    player:draw()
    if btn(5) then show_hud() end
end

function update_gameover()
end

function draw_gameover()
    camera()
    cls()
    if win_flag then
        print("‚òÖ you win! ‚òÖ", 37, 64, 7)
    else
        print("game over.", 38, 64, 7)
    end
    print("press ‚ùé to play again.", 20, 72, 5)
    if btnp(5) then extcmd("reset") end
end

function check_win_lose()
    local t = tile_type_at(player.x, player.y)
    if t == "win" then
        win_flag = (player.keys >= 1)
        change_state(game_states.gameover)
    end
end
-->8
-- DIALOGUE

-- call this before you start using dtb.
-- optional parameter is the number of lines that are displayed. default is 3.
function dtb_init(numlines)
	dtb_queu={}
	dtb_queuf={}
	dtb_numlines=3
	if numlines then
		dtb_numlines=numlines
	end
	_dtb_clean()
end

-- this will add a piece of text to the queu. the queu is processed automatically.
function dtb_disp(txt,callback)
	local lines={}
	local currline=""
	local curword=""
	local curchar=""
	local upt=function()
		if #curword+#currline>29 then
			add(lines,currline)
			currline=""
		end
		currline=currline..curword
		curword=""
	end
	for i=1,#txt do
		curchar=sub(txt,i,i)
		curword=curword..curchar
		if curchar==" " then
			upt()
		elseif #curword>28 then
			curword=curword.."-"
			upt()
		end
	end
	upt()
	if currline~="" then
		add(lines,currline)
	end
	add(dtb_queu,lines)
	if callback==nil then
		callback=0
	end
	add(dtb_queuf,callback)
end

-- functions with an underscore prefix are ment for internal use, don't worry about them.
function _dtb_clean()
	dtb_dislines={}
	for i=1,dtb_numlines do
		add(dtb_dislines,"")
	end
	dtb_curline=0
	dtb_ltime=0
end

function _dtb_nextline()
	dtb_curline+=1
	for i=1,#dtb_dislines-1 do
		dtb_dislines[i]=dtb_dislines[i+1]
	end
	dtb_dislines[#dtb_dislines]=""
	sfx(2)
end

function _dtb_nexttext()
	if dtb_queuf[1]~=0 then
		dtb_queuf[1]()
	end
	del(dtb_queuf,dtb_queuf[1])
	del(dtb_queu,dtb_queu[1])
	_dtb_clean()
	sfx(2)
end

function update_dialogue()
    -- only leave dialogue state if dtb is inactive
    if #dtb_queu == 0 and btnp(4) == false then
        change_state(game_states.game)
    end
end


-- make sure that this function is called each update.
function dtb_update()
	if #dtb_queu>0 then
		if dtb_curline==0 then
			dtb_curline=1
		end
		local dislineslength=#dtb_dislines
		local curlines=dtb_queu[1]
		local curlinelength=#dtb_dislines[dislineslength]
		local complete=curlinelength>=#curlines[dtb_curline]
		if complete and dtb_curline>=#curlines then
			if btnp(4) then
				_dtb_nexttext()
				return
			end
		elseif dtb_curline>0 then
			dtb_ltime-=1
			if not complete then
				if dtb_ltime<=0 then
					local curchari=curlinelength+1
					local curchar=sub(curlines[dtb_curline],curchari,curchari)
					dtb_ltime=1
					if curchar~=" " then
						sfx(0)
					end
					if curchar=="." then
						dtb_ltime=6
					end
					dtb_dislines[dislineslength]=dtb_dislines[dislineslength]..curchar
				end
				if btnp(4) then
					dtb_dislines[dislineslength]=curlines[dtb_curline]
				end
			else
				if btnp(4) then
					_dtb_nextline()
				end
			end
		end
	end
end

-- make sure to call this function everytime you draw.
function dtb_draw()
	if #dtb_queu>0 then
		local dislineslength=#dtb_dislines
		local offset=0
		if dtb_curline<dislineslength then
			offset=dislineslength-dtb_curline
		end
		rectfill(2,125-dislineslength*8,125,125,0)
		if dtb_curline>0 and #dtb_dislines[#dtb_dislines]==#dtb_queu[1][dtb_curline] then
			print("\x8e",118,120,1)
		end
		for i=1,dislineslength do
			print(dtb_dislines[i],4,i*8+119-(dislineslength+offset)*8,7)
		end
	end
end
__gfx__
00000000008a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770009099a9090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000a0aaaa0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700009009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000a00a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000ff0000004400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000ff00000044000000ff000000ff0000004400000044000000000000000000000000000000000000000000000000000000000000000000000000000
000000000121121001211210000ff000000ff0000004400000044000000000000000000000000000000000000000000000000000000000000000000000000000
00000000102112011021120109999990019119100999999001911910000000000000000000000000000000000000000000000000000000000000000000000000
00000000f0dddd0f40dddd04f099990ff091190f4099990440911904000000000000000000000000000000000000000000000000000000000000000000000000
0000000000d00d0000d00d00f0dddd0ff0dddd0f40dddd0440dddd04000000000000000000000000000000000000000000000000000000000000000000000000
0000000000d00d0000d00d0000d00d0000d00d0000d00d0000d00d00000000000000000000000000000000000000000000000000000000000000000000000000
00000000001001000010010000100100001001000010010000100100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333333333333333333300000000555555555555555555555555555555556665566666566656665666566665566666655666
33333333333333b33333b33333733333333337333335553300000000666666655666666666666666666666656665566655444455551111556765576660655066
3333333333333b3333333b3337373333333373733355655300000000666666655666666666666666666666656655556654444446521111160705070605050506
33333333333b3b333b333b3333733333333337333555565300000000666666655666666666666666666666655555555551444445521111155055505550555055
3333333333b33b3333b33b3333333733337333333555555300000000666666655666666666666666666666655555555564444446621111165555555555555555
3333333333b3333333b333333333737337373333b255555b00000000666666655666666666666666666666656655556654444a45521111156755576660555066
33333333333333333333333333333733337333333b2255b300000000666666655666666666666666666666656665566651444446521111160705070605050506
33333333333333333333333333333333333333333333333300000000555555555666666555555555566666656665566654444445521111156065506660655066
11111111111111111111111111111111000000000000000000000000555555555666666566566656566666655555555566655666666556663333333333333333
1111111111111c1111c1111111155511000000000000000000000000566666665666666555555555566666656666656699955666666556663633363330333033
111111111111c1c11c1c11111155655100000000000000000000000056666666566666655666566656666665666665669a999999665555660603060305030503
1111111111c1111111111111155556510000000000000000000000005666666656666665555555555666666555555555959aaaa9555555553033303330333033
111111111c1c1111111111111555555100000000000000000000000056666666566666656656665656666665665666669995555a555555553333333333333333
1111111111111c111111c111c255555c0000000000000000000000005666666656666665555555555666666566566666aaa55566665555663633363330333033
111111111111c1c1111c1c111c2255c1000000000000000000000000566666665666666556665666566666655555555566655666666556660603060305030503
11111111111111111111111111cccc11000000000000000000000000555555555666666555555555566666656666656666655666666556663033303330333033
33333333333333333311113300000000000000000000000000000000555555555666666555555555566666656656665633333333333333334444444400000000
3334333333333433313bb31300000000000000000000000000000000566666655666666666666666666666655511115599933333333333334141141400000000
343333333433333331bb8b13000000000000000000000000000000005666666556666666666666666666666551cc57169a999999333333334444444400000000
333333333333333313bbbbb10000000000000000000000000000000056666665566666666666666666666665517c5c15939aaaa9333333334141411400000000
3333334333343333138bb8b1000000000000000000000000000000005666666556666666666666666666666561cc5c169993333a333333334444444400000000
34333333333333333133bb13000000000000000000000000000000005666666556666666666666666666666551111115aaa33333333333335554455500000000
33334333333334333311113300000000000000000000000000000000566666655666666666666666666666655666566633333333333333333b344b3300000000
333333333333333333344333000000000000000000000000000000005666666555555555555555555555555555555555333333333333333333b44b3300000000
000000000000000000000000000000000000000000000000000000005666666566566656665666564a4444a44a4aa4a44a4444a44a4aa4a40000000066666666
000000000000000000000000000000000000000000000000000000005666666555444455551111554a4444a4151991514a4444a4151991510000000066888866
000000000000000000000000000000000000000000000000000000005666666554444446521111164a4444a4111111114a4444a4111111110000000068666686
000000000000000000000000000000000000000000000000000000005666666551444445521111154a4444a4111111114a4444a4111111110000000068688686
000000000000000000000000000000000000000000000000000000005666666564444446621111164a4444a4151111514a4444a4151111510000000068688686
000000000000000000000000000000000000000000000000000000005666666554444a4552111115aaa99aaa4a4444a4aaa99aaa4a4444a40000000068666686
00000000000000000000000000000000000000000000000000000000566666655144444652111116494994944a4444a4494994944a4444a40000000066888866
000000000000000000000000000000000000000000000000000000005555555554444445521111154a4444a44a4444a44a4444a44a4444a40000000066666666
11111111111111111111111133333333333333333333333333333333333333333333333333333333333333333333333333333333333333334444444444444444
11111111111111111111111133337333333333333333333333333333333333333333333333333333333373333333333333333333333333334444444444444444
11111111111111111111111133373733333333ff33fff33fff33333333333333333333333333333333373733333333ff33fff33fff3333334444444444444444
111111111111111111111111333373333333ff11ff111ff111ff3333333333333333333333333333333373333333ff44ff444ff444ff33334444444444444444
11111111111111111111111137333333333f1111111111111111f33333333333333333333333333337333333333f4444444444444444f3334444444444444444
111111ff11fff11fff11111173733333333f111111ccc11c1111f333333333ff33fff33fff33333373733333333f4444444444444444f333444444ffff444444
11111f33ff333ff333f111113733333333f11111cc111cc111111f3333333f44ff444ff444f333333733333333f444444444444444444f3344444f3333f44444
11111f333333333333f111113333333333f111111111111111111f3333333f444444444444f333333333333333f444444444444444444f3344444f3333f44444
11111f33333333333f1111113333733333f11c11111111111c11f33333333f44444444444f3333333333733333f44444444444444444f33344444f3333f44444
111111f3333333333f11111133373733333f11c1111111111c11f333333333f4444444444f33333333373733333f4444444444444444f33344444f3333f44444
111111f33333333333f111113b3b7333333f11c11111111111c11f33333333f44444444444f333333b3b7333333f44444444444444444f33444444ffff444444
11111f333333333333f1111133b3333333f11c111111111111c11f3333333f444444444444f3333333b3333333f444444444444444444f334444444444444444
11111f333333333333f1111133b3333333f11c111111111111c11f3333333f444444444444f3333333b3333333f444444444444444444f334444444444444444
11111f33333333333f111111333b333333f11c11111111111c11f33333333f44444444444f333333333b333333f44444444444444444f3334444444444444444
111111f3333333333f11111133333333333f11c1111111111c11f333333333f4444444444f33333333333333333f4444444444444444f3334444444444444444
111111f33333333333f1111133333333333f11c11111111111c11f33333333f44444444444f3333333333333333f44444444444444444f334444444444444444
11111f333333333333f111113333333333f111111111111111111f3333333f444444444444f333333333333333f444444444444444444f330000000000000000
11111f333ff333ff33f111113333333333f111111cc111cc11111f3333333f444ff444ff44f333333333333333f444444444444444444f330000000000000000
111111fff11fff11ff111111333333b3333f1111c11ccc111111f333333333fff33fff33ff333333333333b3333f4444444444444444f3330000000000000000
111111111111111111111111b33b3b33333f1111111111111111f333333333333333333333333333b33b3b33333f4444444444444444f3330000000000000000
1111111111111111111111113b3b3b333333ff111ff111ff11ff33333333333333333333333333333b3b3b333333ff444ff444ff44ff33330000000000000000
1111111111111111111111113b333b33333333fff33fff33ff3333333333333333333333333333333b333b33333333fff33fff33ff3333330000000000000000
11111111111111111111111133333333333333333333333333333333333333333333333333333333333333333333333333333333333333330000000000000000
11111111111111111111111133333333333333333333333333333333333333333333333333333333333333333333333333333333333333330000000000000000
33333333333333333333333333333333331111333331133333311333111111111111111111111111111111114444444444444444444444444444444444444444
333333b33333b3333335553333333333313bb3133313b1333313b13311c1111111111c111115551111111111444444f44444f444444555444444444444f444f4
33333b3333333b33335565533563333331bb8b133139b313313bbb131c1c11111111c1c1115565511561111144444f4444444f44445565544564444444444444
333b3b333b333b33355556533556333313bbbbb1313bb313313bbb1311111111111111111555565115561111444f4f444f444f44455556544556444444444444
33b33b3333b33b3335555553b255b563138bb8b1139bbb3113bbbb31111111111111111115555551c255c56c44f44f4444f44f4445555554f255f5644444f444
33b3333333b33333b255555b3b33b25b3133bb1313bbb93113bbb3311111c11111c11111c255555c1cccc25c44f4444444f44444f255555f4f44f25f44444444
33333333333333333b2255b3333333b3331111331111111111111111111c1c111c1c11111c2255c111111cc144444444444444444f2255f4444444f44f444444
33333333333333333333333333333333333443333334433333344333111111111111111111cccc11111111114444444444444444444444444444444444444444
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020200000100010101010001000204010101010000000101010100000002040000010000000001010101010000000000000000000000010100010101010000
0101010001010101010100000000000001000100010101010001000000000000010101000101010101010000000000000202010101010101010101020201010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b6b6b69391b091b3b2b6b6b6b6b6b6b6484949494949494949494949494ab6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b68b8c8c8c8c8c8c8c8c8db2b6b6b6b6584b4b4b4b4b4e4b4f4b4e4b4b5ab6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b69bbf9c9c9cbc9c9cbf9d9191b6b6b6584b4b4b4b4b4f4b4e4b4f4b7f5ab6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b69bbb9c9c9c9c9c9c9c9db19191b6b6584b4b4b4b4b4e4b4f4b4e4b4b5ab6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b683ab8f9c9c9cbf9c9cbe9d839191b6b6684a4b4b4b48496969696969696ab6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b691a39b9c8eacacacacacad919191b6b65968474b576a59596b59596b5959b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b3919b9c9db19183919191918391b6b6b359594c5959b29391b391b09183b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b2b3675b67919183916c91919191b6b683919bbf9db191b19191b19191b0b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
858585585b5885858586919191b091b6b6b1919b9c9d919191b4919184858585000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b99595585b58bab7b9a08586b39191b6b691919b9c9db191b0919384a2bab8b9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
95b895585b589595959595a08586b3b6b6b291675b679183848585a295959595000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9595b8585b5895959595b895b9a08585858585585b588585a2b99595b79595b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b7ba95585b5895bab7959595b7bab895959595585b5895ba959595b89595b980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a5a5a5585b58a5a582959595959595959595b9585b58959595959595958081a6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b391775b7791b2a482b99595959595bab795585b58959595b79595ba969191000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6a3919b9c9d919191a4a582ba959595959595585b58b9959595ba8081a691b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b691b19b9c9da391b491b3a4a5a5a5a5a5a5a5585b58a5a5818181a6919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b691919bbf9d91919191b0919191a3b6b6b6b6775b77b3918ab19191a39191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b08b9f9c9d91b2b6919191b1b391b6b6b6b39bbf9d91919191b0b2919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6919b9c8eadb3b6b691b091919191b6b693919b9c9d91a39191919191a391b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b19bbf9d9191b6b691918b8c8c8c8c8c8c8c9f9c9d91b08a91918a919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6919b9c9db191b6b6b6919bbbbf9c9cbf9c9cbf9c9d6c9191919191919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6919b9c9d91b6b6b6b6a39bbf8eacacacacacacacad91b39193b19191b391b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b39b9c9db291b6b6b6919b9c9db2b6b68ab0919191b19191919191919391b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6919bbf9e8d91b3b6b6919b9c9d91b6b6919191939191b291919191919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6919b9c9c9e8d917c91939b9c9db1b6b691a3919191919191b09183919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b1abac8fbf9e8c8c8c8c9f9c9d91b6b69191919183919191919191919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b691b3b2ab8fbc9c9cbf9c9cbf9d91b6b69183b3919191b091919191919391b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b691919191abacacacacacacacad91b6b6919191b191919191a391b1919191b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b2b091b39191b09191b19191b391b6b691b39191919391919191919191b2b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000905000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00030000110501f0501f0501f0301f0201f0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
