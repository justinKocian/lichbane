pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--LICHBANE
--by justin

-- STATE MACHINE
game_states = {
    splash = 0,
    game = 1,
    dialogue = 2,
    gameover = 3
}

state = game_states.splash
win_flag = false -- true = win, false = lose

function change_state()
    cls()
    if state == game_states.splash then
        state = game_states.game
    elseif state == game_states.game then
        state = game_states.gameover
    elseif state == game_states.gameover then
        state = game_states.splash
    end
end
-->8
-- ENTITIES
Entity = {}
Entity.__index = Entity

function Entity.create(x,y,w,h)
    local new_entity = {}
    setmetatable(new_entity, Entity)

    new_entity.x = x
    new_entity.y = y
    new_entity.h = h
    new_entity.w = w

    return new_entity
end

function Entity:collide(other)
    return other.x < self.x + self.w and self.x < other.x + other.w
       and other.y < self.y + self.h and self.y < other.y + other.h
end
-->8
-- PLAYER
function make_player()
    player = Entity.create(3,3,1,1)
    player.sprite = 1
    player.keys = 0
    player.gold = 0
    player.hp = 5 -- starting HP
    player.hazard_timer = 0
end

function draw_player()
    spr(player.sprite, player.x*8, player.y*8)
end

function move_player()
    local newx = player.x
    local newy = player.y

    if (btnp(0)) newx -= 1
    if (btnp(1)) newx += 1
    if (btnp(2)) newy -= 1
    if (btnp(3)) newy += 1

    if can_move(newx, newy) then
        player.x = mid(0, newx, 127)
        player.y = mid(0, newy, 63)
    else
        sfx(0)
    end
end

function try_interact()
    if not btnp(4) then return end

    local facing_x = player.x
    local facing_y = player.y

    if btn(0) then facing_x -= 1
    elseif btn(1) then facing_x += 1
    elseif btn(2) then facing_y -= 1
    elseif btn(3) then facing_y += 1
    end

    interact(facing_x, facing_y)
end

function check_hazard_damage()
    if tile_type_at(player.x, player.y) == "hazard" then
        if player.hazard_timer <= 0 then
            player.hp -= 1
            player.hazard_timer = 15 -- frames until next damage (roughly 1/4 second)
            sfx(0) -- hurt sound
            if player.hp <= 0 then
                state = game_states.gameover
                win_flag = false
            end
        end
    end

    -- always tick down the timer
    if player.hazard_timer > 0 then
        player.hazard_timer -= 1
    end
end


-->8
-- NPCS
npcs = {}

function make_npc(x, y)
    local npc = Entity.create(x, y, 1, 1)
    npc.sprite = flr(rnd(4)) + 17
    npc.move_timer = 0
    npc.move_cooldown = 30 + flr(rnd(60))
    add(npcs, npc)
end

function update_npcs()
    for npc in all(npcs) do
        npc.move_timer -= 1
        if npc.move_timer <= 0 then
            move_npc(npc)
            npc.move_timer = npc.move_cooldown
        end
    end
end

function move_npc(npc)
    local dir = rnd({"left", "right", "up", "down"})
    local newx = npc.x
    local newy = npc.y

    if dir == "left" then newx -= 1
    elseif dir == "right" then newx += 1
    elseif dir == "up" then newy -= 1
    elseif dir == "down" then newy += 1
    end

    if can_move(newx, newy) and not (newx == player.x and newy == player.y) then
        npc.x = mid(0, newx, 127)
        npc.y = mid(0, newy, 63)
    end
end

function draw_npcs()
    for npc in all(npcs) do
        spr(npc.sprite, npc.x*8, npc.y*8)
    end
end

function check_npc_interact(x, y)
    if state != game_states.game then return end

    for npc in all(npcs) do
        if npc.x == x and npc.y == y then
            state = game_states.dialogue
            dtb_disp("hello, traveler! stay a while and listen.")
            break
        end
    end
end
-->8
-- MAP SYSTEM
tile_types = {}

function set_tile_type(tile_id, tile_type)
    tile_types[tile_id] = tile_type
end

function tile_at(x, y)
    return mget(x, y)
end

function tile_type_at(x, y)
    return tile_types[tile_at(x, y)]
end

function map_setup()
    timer = 0
    anim_time = 30

    -- flags
    wall_flag = 0
    anim1_flag = 1
    anim2_flag = 2

    -- tile types
    set_tile_type(92, "key")
    set_tile_type(108, "key")
    set_tile_type(76, "door")
    set_tile_type(124, "chest")
    set_tile_type(110, "sign")
    set_tile_type(127, "win")
    set_tile_type(78, "hazard")
    set_tile_type(94, "hazard")
end

function update_map()
    if timer < 0 then
        toggle_tiles()
        timer = anim_time
    end
    timer -= 1
end

function draw_map()
    mapx = flr(player.x/16)*16
    mapy = flr(player.y/16)*16
    camera(mapx*8, mapy*8)
    map(0,0,0,0,128,64)
end

function can_move(x, y)
    local tile = tile_at(x, y)
    if fget(tile, wall_flag) then return false end

    for npc in all(npcs) do
        if npc.x == x and npc.y == y then
            return false
        end
    end

    return true
end

function swap_tile(x, y)
    local tile = tile_at(x, y)
    mset(x, y, tile+1)
end

function unswap_tile(x, y)
    local tile = tile_at(x, y)
    mset(x, y, tile-1)
end

function toggle_tiles()
    for x = mapx, mapx+15 do
        for y = mapy, mapy+15 do
            local tile = tile_at(x, y)
            local ttype = tile_types[tile]

            -- skip interactables
            if ttype != "key" and ttype != "door" and ttype != "chest" then
                if fget(tile, anim1_flag) then
                    swap_tile(x, y)
                    sfx(3)
                elseif fget(tile, anim2_flag) then
                    unswap_tile(x, y)
                    sfx(3)
                end
            end
        end
    end
end

function interact(x, y)
    local t = tile_type_at(x, y)

    if t == "key" then
        get_key(x, y)
    elseif t == "door" and player.keys > 0 then
        open_door(x, y)
    elseif t == "chest" and player.keys > 0 then
        open_chest(x, y)
    elseif t == "sign" then
        read_sign(x, y)
    else
        check_npc_interact(x, y)
    end
end

function get_key(x, y)
    player.keys += 1
    swap_tile(x, y)
    clear_tile_type(x, y) -- key permanently gone
    sfx(1)
end


function open_door(x, y)
    player.keys -= 1
    swap_tile(x, y)
    clear_tile_type(x, y) -- door permanently opened
    sfx(2)
end


function open_chest(x, y)
    player.keys -= 1
    swap_tile(x, y)
    clear_tile_type(x, y) -- chest permanently emptied
    sfx(1)
    player.gold = 100
end

function clear_tile_type(x, y)
    local tile = tile_at(x, y)
    tile_types[tile] = nil
end

function read_sign(x, y)
    state = game_states.dialogue
    dtb_disp("an old, weathered sign.\n(more signs coming soon!)")
end

-->8
-- WIN/LOSE SYSTEM
function check_win_lose()
    local t = tile_type_at(player.x, player.y)

    if t == "win" then
        if player.keys >= 1 then
            state = game_states.gameover
            win_flag = true
        else
            state = game_states.gameover
            win_flag = false
        end
    elseif t == "lose" then
        state = game_states.gameover
        win_flag = false
    end
end

function draw_gameover()
    camera()
    cls()

    if win_flag then
        print("★ you win! ★", 37, 64, 7)
    else
        print("game over.", 38, 64, 7)
    end

    print("press ❎ to play again.", 20, 72, 5)

    if btnp(5) then
        extcmd("reset")
    end
end

function update_gameover()
    -- static screen, no logic
end

-->8
-- INVENTORY
function show_hud()
    local hudx = mapx*8 + 2
    local hud_y = mapy*8 + 2

    -- background panel
    rectfill(hudx, hud_y, hudx+60, hud_y+32, 0)
    rect(hudx, hud_y, hudx+60, hud_y+32, 7)

    -- stats
    print("hp: "..player.hp, hudx+6, hud_y+4, 8)
    print("keys: "..player.keys, hudx+6, hud_y+12, 9)
    print("gold: "..player.gold, hudx+6, hud_y+20, 9)
end

-->8
-- PICO-8 CORE
function _init()
    cls()
    map_setup()
    make_player()
    make_npc(10,10)
    make_npc(15,12)
    dtb_init()
end

function _update()
    dtb_update()

    if state == game_states.splash then
        update_splash()
    elseif state == game_states.game then
        update_game()
    elseif state == game_states.dialogue then
        update_dialogue()
    elseif state == game_states.gameover then
        update_gameover()
    end
end


function _draw()
    cls()
    if state == game_states.splash then
        draw_splash()
    elseif state == game_states.game then
        draw_game()
    elseif state == game_states.dialogue then
        draw_game() -- << draw game even during dialogue
    elseif state == game_states.gameover then
        draw_gameover()
    end
    dtb_draw()
end

-->8
-- SPLASH SCREEN
function update_splash()
    if btnp(❎) then
        change_state()
    end
end

function draw_splash()
    rectfill(0,0,SCREEN_SIZE,SCREEN_SIZE,11)
    local text = "adventure!"
    write(text, text_x_pos(text), 52,7)
end
-->8
-- GAME LOOP
function update_game()
    update_map()
    move_player()
    update_npcs()
    try_interact()
    check_win_lose()
    check_hazard_damage()
end

function draw_game()
    draw_map()
    draw_npcs()
    draw_player()
    if btn(5) then
        show_hud()
    end
end
-->8
-- UTILS
SCREEN_SIZE = 128

function text_x_pos(text)
    local letter_width = 4
    local width = #text * letter_width

    if width > SCREEN_SIZE then
        return 0
    end

    return SCREEN_SIZE / 2 - flr(width / 2)
end

function write(text,x,y,color)
    for i=0,2 do
        for j=0,2 do
            print(text,x+i,y+j,0)
        end
    end
    print(text,x+1,y+1,color)
end

function mod_zero(a,b)
    return a - flr(a/b)*b == 0
end
-->8
-- DIALOGUE

-- call this before you start using dtb.
-- optional parameter is the number of lines that are displayed. default is 3.
function dtb_init(numlines)
	dtb_queu={}
	dtb_queuf={}
	dtb_numlines=3
	if numlines then
		dtb_numlines=numlines
	end
	_dtb_clean()
end

-- this will add a piece of text to the queu. the queu is processed automatically.
function dtb_disp(txt,callback)
	local lines={}
	local currline=""
	local curword=""
	local curchar=""
	local upt=function()
		if #curword+#currline>29 then
			add(lines,currline)
			currline=""
		end
		currline=currline..curword
		curword=""
	end
	for i=1,#txt do
		curchar=sub(txt,i,i)
		curword=curword..curchar
		if curchar==" " then
			upt()
		elseif #curword>28 then
			curword=curword.."-"
			upt()
		end
	end
	upt()
	if currline~="" then
		add(lines,currline)
	end
	add(dtb_queu,lines)
	if callback==nil then
		callback=0
	end
	add(dtb_queuf,callback)
end

-- functions with an underscore prefix are ment for internal use, don't worry about them.
function _dtb_clean()
	dtb_dislines={}
	for i=1,dtb_numlines do
		add(dtb_dislines,"")
	end
	dtb_curline=0
	dtb_ltime=0
end

function _dtb_nextline()
	dtb_curline+=1
	for i=1,#dtb_dislines-1 do
		dtb_dislines[i]=dtb_dislines[i+1]
	end
	dtb_dislines[#dtb_dislines]=""
	sfx(2)
end

function _dtb_nexttext()
	if dtb_queuf[1]~=0 then
		dtb_queuf[1]()
	end
	del(dtb_queuf,dtb_queuf[1])
	del(dtb_queu,dtb_queu[1])
	_dtb_clean()
	sfx(2)
end

function update_dialogue()
    -- only leave dialogue state if dtb is inactive
    if #dtb_queu == 0 and btnp(4) == false then
        state = game_states.game
    end
end


-- make sure that this function is called each update.
function dtb_update()
	if #dtb_queu>0 then
		if dtb_curline==0 then
			dtb_curline=1
		end
		local dislineslength=#dtb_dislines
		local curlines=dtb_queu[1]
		local curlinelength=#dtb_dislines[dislineslength]
		local complete=curlinelength>=#curlines[dtb_curline]
		if complete and dtb_curline>=#curlines then
			if btnp(4) then
				_dtb_nexttext()
				return
			end
		elseif dtb_curline>0 then
			dtb_ltime-=1
			if not complete then
				if dtb_ltime<=0 then
					local curchari=curlinelength+1
					local curchar=sub(curlines[dtb_curline],curchari,curchari)
					dtb_ltime=1
					if curchar~=" " then
						sfx(0)
					end
					if curchar=="." then
						dtb_ltime=6
					end
					dtb_dislines[dislineslength]=dtb_dislines[dislineslength]..curchar
				end
				if btnp(4) then
					dtb_dislines[dislineslength]=curlines[dtb_curline]
				end
			else
				if btnp(4) then
					_dtb_nextline()
				end
			end
		end
	end
end

-- make sure to call this function everytime you draw.
function dtb_draw()
	if #dtb_queu>0 then
		local dislineslength=#dtb_dislines
		local offset=0
		if dtb_curline<dislineslength then
			offset=dislineslength-dtb_curline
		end
		rectfill(2,125-dislineslength*8,125,125,0)
		if dtb_curline>0 and #dtb_dislines[#dtb_dislines]==#dtb_queu[1][dtb_curline] then
			print("\x8e",118,120,1)
		end
		for i=1,dislineslength do
			print(dtb_dislines[i],4,i*8+119-(dislineslength+offset)*8,7)
		end
	end
end
__gfx__
00000000008a90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000aa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700099999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770009099a9090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000a0aaaa0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700009009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000009009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000a00a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000812000008180000081c0000081e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000110000001100000011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000002222220088888800cccccc00eeeeee00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002022120280881808c0cc1c0ce0ee1e0e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000101111011011110110111101101111010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002002000080080000c00c0000e00e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000002002000080080000c00c0000e00e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001001000010010000100100001001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333333333333333333300000000555555555555555555555555555555556665566666566656665666566665566666655666
33333333333333b33b33333333733333333337333335553300000000666666655666666666666666666666656665566655444455551111556765576660655066
3333333333333b3333b3333337373333333373733355655300000000666666655666666666666666666666656655556654444446521111160705070605050506
333333333b333b3333b333b333733333333337333555565300000000666666655666666666666666666666655555555551444445521111155055505550555055
3333333333b33b3333b33b3333333733337333333555555300000000666666655666666666666666666666655555555564444446621111165555555555555555
3333333333b3333333b33b333333737337373333b255555b00000000666666655666666666666666666666656655556654444a45521111156755576660555066
33333333333333333333333333333733337333333b2255b300000000666666655666666666666666666666656665566651444446521111160705070605050506
33333333333333333333333333333333333333333333333300000000555555555666666555555555566666656665566654444445521111156065506660655066
11111111111111111111111111111111000000000000000000000000555555555666666566566656566666655555555566655666666556663333333333333333
1111111111111c1111c1111111155511000000000000000000000000566666665666666555555555566666656666656699955666666556663633363330333033
111111111111c1c11c1c11111155655100000000000000000000000056666666566666655666566656666665666665669a999999665555660603060305030503
1111111111c1111111111111155556510000000000000000000000005666666656666665555555555666666555555555959aaaa9555555553033303330333033
111111111c1c1111111111111555555100000000000000000000000056666666566666656656665656666665665666669995555a555555553333333333333333
1111111111111c111111c111c255555c0000000000000000000000005666666656666665555555555666666566566666aaa55566665555663633363330333033
111111111111c1c1111c1c111c2255c1000000000000000000000000566666665666666556665666566666655555555566655666666556660603060305030503
11111111111111111111111111cccc11000000000000000000000000555555555666666555555555566666656666656666655666666556663033303330333033
33333333333333333311113300000000000000000000000000000000555555555666666555555555566666650000000033333333333333330000000000000000
3334333333333433313bb31300000000000000000000000000000000566666655666666666666666666666650000000099933333333333330000000000000000
343333333433333331bb8b130000000000000000000000000000000056666665566666666666666666666665000000009a999999333333330000000000000000
333333333333333313bbbbb1000000000000000000000000000000005666666556666666666666666666666500000000939aaaa9333333330000000000000000
3333334333343333138bb8b10000000000000000000000000000000056666665566666666666666666666665000000009993333a333333330000000000000000
34333333333333333133bb13000000000000000000000000000000005666666556666666666666666666666500000000aaa33333333333330000000000000000
33334333333334333311113300000000000000000000000000000000566666655666666666666666666666650000000033333333333333330000000000000000
33333333333333333334433300000000000000000000000000000000566666655555555555555555555555550000000033333333333333330000000000000000
0000000000000000000000000000000000000000000000000000000056666665000000000000000000000000000000004a4444a44a4aa4a40000000066666666
0000000000000000000000000000000000000000000000000000000056666665000000000000000000000000000000004a4444a4151991510000000066888866
0000000000000000000000000000000000000000000000000000000056666665000000000000000000000000000000004a4444a4111111110000000068666686
0000000000000000000000000000000000000000000000000000000056666665000000000000000000000000000000004a4444a4111111110000000068688686
0000000000000000000000000000000000000000000000000000000056666665000000000000000000000000000000004a4444a4151111510000000068688686
000000000000000000000000000000000000000000000000000000005666666500000000000000000000000000000000aaa99aaa4a4444a40000000068666686
000000000000000000000000000000000000000000000000000000005666666500000000000000000000000000000000494994944a4444a40000000066888866
0000000000000000000000000000000000000000000000000000000055555555000000000000000000000000000000004a4444a44a4444a40000000066666666
__gff__
0000000000000000000000000000000000484848480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010101010001000204010101010000000101010100000002040000010000000001010101000000000000000000000000010101010001010000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
45404040404040484949494a40404045454048494949494949494a4040404045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
404040404e4f4e584b7c4b5a40404040404058595959595959595a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
404040405e5f5e584b4b4b5a404040404040584b4b4b4b4b4b4b5a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404068474b576a404040404040584b4b4b4b4b4b4b5a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040407f59594c5959404040404040584b4b4b4b4b4b4b5a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
404040404040404040404040404040404040584b4b4b4b4b4b4b5a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040406c4040404040404040404040686969494a4b4b4b5a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
40404040404040404040404040404040404059595959584b4b4b5a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
404040404040404040406c404040404040404040404068474b576a4040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404059594c59594040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4540404040404040404040404040404545404040404040404040404040404045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4540404040404040404040404040404545404040404040404040404040404045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040404040404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4540404040404040404040404040404545404040404040404040404040404045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
